package data;

import java.util.ArrayList;
import java.util.Scanner;

import util.MyToys;

//tủ dung79 hồ sơ các thú cưng, lồng nhốt toàn bộ đám Dog, Cat
//->Viết hết các hàm vào đây, không viết trong main nữa
//Tủ đựng hồ sơ các thú cưng, lồng ghép toàn bộ đám chó và mèo

public class Cabinet {
//	dùng ArrayList là 1 biến thể của mảng, để lưu trữ danh sách
//	hồ sơ các chú pet
//	phiên bản nâng cao dễ sài map
	private ArrayList<Pet> petList = new ArrayList();
	private Scanner scanner = new Scanner(System.in);
	//Bàn phím nhập sài chung cho tất cả.
	
	//----------------------------------
	//Chứa các hành động liên quan đến tủ đồ, tủ hồ sơ
	//----------------------------------
	//Thêm hồ sơ, tìm hồ sơ, xóa hồ sơ, sửa hồ sơ, in danh sách sort.
	
	//Thêm mới hồ sơ của 1 con chó
	public void addNewDog() {
		String id,name;
		int yob;
		double weight;
		int pos;
//		do {
////			Mã số con dog là D kèm 5 digits
//			id = MyToys.getID("Input ID (DXXXXX): ", "Error", "[D|d]\\d{5}&");
//			//id cua may hop le
//			
//		}
	}
	
	//Tìm hồ sơ chó mèo
	//Hàm này được gọi bởi menu từ main để thực thi chức năng tìm thú cưng, yêu cầu nhập id
	//của dog hoặc cat để tìm
	public void searchPetByID() {
		String id;
		Pet x; //Con trỏ tạm thời đến pet cần tìm.
		
		id = MyToys.getString("Input pet id: ", "Pet id is required!!");
		x = searchPetObjectByID(id);
	}
	
	//nó có khả năng return ra object.
//	Nếu tìm thấy ta return con trỏ đến pet cần tìm, có 2 biến cùng trỏ vào vùng new pet trước đó.
//	Nếu không tìm được trỏ về NULL
	
	public Pet searchPetObjectByID(String petID) {
		if(petList.isEmpty()) {
			return null;
		}
		for(int i = 0; i <= petList.size() - 1; i++) {
			if(petList.get(i).getId().equalsIgnoreCase(petID)) {
				return petList.get(i);
			}
		}
		return null;
	}
	
	
	
	
}


































































